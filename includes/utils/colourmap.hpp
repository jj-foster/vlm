#pragma once

#include <algorithm>
#include <cmath>

namespace utils
{
    namespace colourMap
    {
        enum class CmType
        {
            Viridis, Jet, Coolwarm
        };

        struct Colour
        {
            double data[3];

            constexpr Colour(double r, double g, double b) noexcept : data{ r,g,b } {}

            double& r() noexcept { return data[0]; }
            double& g() noexcept { return data[1]; }
            double& b() noexcept { return data[2]; }
            constexpr double r() const noexcept { return data[0]; }
            constexpr double g() const noexcept { return data[1]; }
            constexpr double b() const noexcept { return data[2]; }

            // Multiplier operator overload - multiplies each rgb element by a value
            friend constexpr Colour operator*(double s, const Colour& c) noexcept
            {
                return { s * c.r(),s * c.g(),s * c.b() };
            }

            // + operator overload - Adds rbg values of each colour together
            friend constexpr Colour operator+(const Colour& c0, const Colour& c1) noexcept
            {
                return { c0.r() + c1.r(),c0.g() + c1.g(),c0.b() + c1.g() };
            }

        };

        inline Colour getColour(double x, CmType type = CmType::Viridis);
        inline Colour GetViridisColour(double x);
        inline Colour GetJetColour(double x);
        inline Colour GetCoolwarmColour(double x);

        // Not for external use
        namespace internal
        {
            inline constexpr double Clamp01(double x) noexcept
            {
                return (x < 0.0) ? 0.0 : (x > 1.0) ? 1.0 : x;
            }

            template <std::size_t N>
            Colour CalcLerp(double x, const Colour(&data)[N])
            {
                const double a = Clamp01(x) * (N - 1);
                const double i = std::floor(a);
                const double t = a - i;
                const Colour& c0 = data[static_cast<std::size_t>(i)];
                const Colour& c1 = data[static_cast<std::size_t>(std::ceil(a))];

                return (1.0 - t) * c0 + t * c1;
            }
        }

        inline Colour getColour(double x, CmType type)
        {
            switch (type)
            {
            case CmType::Viridis:
                return GetViridisColour(x);
            case CmType::Jet:
                return GetJetColour(x);
            case CmType::Coolwarm:
                return GetCoolwarmColour(x);
            default:
                break;
            }
        }

        inline Colour GetViridisColour(double x)
        {
            // RBG values (0 to 1)
            constexpr Colour data[]{
                { 0.267004, 0.004874, 0.329415 },
                { 0.268510, 0.009605, 0.335427 },
                { 0.269944, 0.014625, 0.341379 },
                { 0.271305, 0.019942, 0.347269 },
                { 0.272594, 0.025563, 0.353093 },
                { 0.273809, 0.031497, 0.358853 },
                { 0.274952, 0.037752, 0.364543 },
                { 0.276022, 0.044167, 0.370164 },
                { 0.277018, 0.050344, 0.375715 },
                { 0.277941, 0.056324, 0.381191 },
                { 0.278791, 0.062145, 0.386592 },
                { 0.279566, 0.067836, 0.391917 },
                { 0.280267, 0.073417, 0.397163 },
                { 0.280894, 0.078907, 0.402329 },
                { 0.281446, 0.084320, 0.407414 },
                { 0.281924, 0.089666, 0.412415 },
                { 0.282327, 0.094955, 0.417331 },
                { 0.282656, 0.100196, 0.422160 },
                { 0.282910, 0.105393, 0.426902 },
                { 0.283091, 0.110553, 0.431554 },
                { 0.283197, 0.115680, 0.436115 },
                { 0.283229, 0.120777, 0.440584 },
                { 0.283187, 0.125848, 0.444960 },
                { 0.283072, 0.130895, 0.449241 },
                { 0.282884, 0.135920, 0.453427 },
                { 0.282623, 0.140926, 0.457517 },
                { 0.282290, 0.145912, 0.461510 },
                { 0.281887, 0.150881, 0.465405 },
                { 0.281412, 0.155834, 0.469201 },
                { 0.280868, 0.160771, 0.472899 },
                { 0.280255, 0.165693, 0.476498 },
                { 0.279574, 0.170599, 0.479997 },
                { 0.278826, 0.175490, 0.483397 },
                { 0.278012, 0.180367, 0.486697 },
                { 0.277134, 0.185228, 0.489898 },
                { 0.276194, 0.190074, 0.493001 },
                { 0.275191, 0.194905, 0.496005 },
                { 0.274128, 0.199721, 0.498911 },
                { 0.273006, 0.204520, 0.501721 },
                { 0.271828, 0.209303, 0.504434 },
                { 0.270595, 0.214069, 0.507052 },
                { 0.269308, 0.218818, 0.509577 },
                { 0.267968, 0.223549, 0.512008 },
                { 0.266580, 0.228262, 0.514349 },
                { 0.265145, 0.232956, 0.516599 },
                { 0.263663, 0.237631, 0.518762 },
                { 0.262138, 0.242286, 0.520837 },
                { 0.260571, 0.246922, 0.522828 },
                { 0.258965, 0.251537, 0.524736 },
                { 0.257322, 0.256130, 0.526563 },
                { 0.255645, 0.260703, 0.528312 },
                { 0.253935, 0.265254, 0.529983 },
                { 0.252194, 0.269783, 0.531579 },
                { 0.250425, 0.274290, 0.533103 },
                { 0.248629, 0.278775, 0.534556 },
                { 0.246811, 0.283237, 0.535941 },
                { 0.244972, 0.287675, 0.537260 },
                { 0.243113, 0.292092, 0.538516 },
                { 0.241237, 0.296485, 0.539709 },
                { 0.239346, 0.300855, 0.540844 },
                { 0.237441, 0.305202, 0.541921 },
                { 0.235526, 0.309527, 0.542944 },
                { 0.233603, 0.313828, 0.543914 },
                { 0.231674, 0.318106, 0.544834 },
                { 0.229739, 0.322361, 0.545706 },
                { 0.227802, 0.326594, 0.546532 },
                { 0.225863, 0.330805, 0.547314 },
                { 0.223925, 0.334994, 0.548053 },
                { 0.221989, 0.339161, 0.548752 },
                { 0.220057, 0.343307, 0.549413 },
                { 0.218130, 0.347432, 0.550038 },
                { 0.216210, 0.351535, 0.550627 },
                { 0.214298, 0.355619, 0.551184 },
                { 0.212395, 0.359683, 0.551710 },
                { 0.210503, 0.363727, 0.552206 },
                { 0.208623, 0.367752, 0.552675 },
                { 0.206756, 0.371758, 0.553117 },
                { 0.204903, 0.375746, 0.553533 },
                { 0.203063, 0.379716, 0.553925 },
                { 0.201239, 0.383670, 0.554294 },
                { 0.199430, 0.387607, 0.554642 },
                { 0.197636, 0.391528, 0.554969 },
                { 0.195860, 0.395433, 0.555276 },
                { 0.194100, 0.399323, 0.555565 },
                { 0.192357, 0.403199, 0.555836 },
                { 0.190631, 0.407061, 0.556089 },
                { 0.188923, 0.410910, 0.556326 },
                { 0.187231, 0.414746, 0.556547 },
                { 0.185556, 0.418570, 0.556753 },
                { 0.183898, 0.422383, 0.556944 },
                { 0.182256, 0.426184, 0.557120 },
                { 0.180629, 0.429975, 0.557282 },
                { 0.179019, 0.433756, 0.557430 },
                { 0.177423, 0.437527, 0.557565 },
                { 0.175841, 0.441290, 0.557685 },
                { 0.174274, 0.445044, 0.557792 },
                { 0.172719, 0.448791, 0.557885 },
                { 0.171176, 0.452530, 0.557965 },
                { 0.169646, 0.456262, 0.558030 },
                { 0.168126, 0.459988, 0.558082 },
                { 0.166617, 0.463708, 0.558119 },
                { 0.165117, 0.467423, 0.558141 },
                { 0.163625, 0.471133, 0.558148 },
                { 0.162142, 0.474838, 0.558140 },
                { 0.160665, 0.478540, 0.558115 },
                { 0.159194, 0.482237, 0.558073 },
                { 0.157729, 0.485932, 0.558013 },
                { 0.156270, 0.489624, 0.557936 },
                { 0.154815, 0.493313, 0.557840 },
                { 0.153364, 0.497000, 0.557724 },
                { 0.151918, 0.500685, 0.557587 },
                { 0.150476, 0.504369, 0.557430 },
                { 0.149039, 0.508051, 0.557250 },
                { 0.147607, 0.511733, 0.557049 },
                { 0.146180, 0.515413, 0.556823 },
                { 0.144759, 0.519093, 0.556572 },
                { 0.143343, 0.522773, 0.556295 },
                { 0.141935, 0.526453, 0.555991 },
                { 0.140536, 0.530132, 0.555659 },
                { 0.139147, 0.533812, 0.555298 },
                { 0.137770, 0.537492, 0.554906 },
                { 0.136408, 0.541173, 0.554483 },
                { 0.135066, 0.544853, 0.554029 },
                { 0.133743, 0.548535, 0.553541 },
                { 0.132444, 0.552216, 0.553018 },
                { 0.131172, 0.555899, 0.552459 },
                { 0.129933, 0.559582, 0.551864 },
                { 0.128729, 0.563265, 0.551229 },
                { 0.127568, 0.566949, 0.550556 },
                { 0.126453, 0.570633, 0.549841 },
                { 0.125394, 0.574318, 0.549086 },
                { 0.124395, 0.578002, 0.548287 },
                { 0.123463, 0.581687, 0.547445 },
                { 0.122606, 0.585371, 0.546557 },
                { 0.121831, 0.589055, 0.545623 },
                { 0.121148, 0.592739, 0.544641 },
                { 0.120565, 0.596422, 0.543611 },
                { 0.120092, 0.600104, 0.542530 },
                { 0.119738, 0.603785, 0.541400 },
                { 0.119512, 0.607464, 0.540218 },
                { 0.119423, 0.611141, 0.538982 },
                { 0.119483, 0.614817, 0.537692 },
                { 0.119699, 0.618490, 0.536347 },
                { 0.120081, 0.622161, 0.534946 },
                { 0.120638, 0.625828, 0.533488 },
                { 0.121380, 0.629492, 0.531973 },
                { 0.122312, 0.633153, 0.530398 },
                { 0.123444, 0.636809, 0.528763 },
                { 0.124780, 0.640461, 0.527068 },
                { 0.126326, 0.644107, 0.525311 },
                { 0.128087, 0.647749, 0.523491 },
                { 0.130067, 0.651384, 0.521608 },
                { 0.132268, 0.655014, 0.519661 },
                { 0.134692, 0.658636, 0.517649 },
                { 0.137339, 0.662252, 0.515571 },
                { 0.140210, 0.665859, 0.513427 },
                { 0.143303, 0.669459, 0.511215 },
                { 0.146616, 0.673050, 0.508936 },
                { 0.150148, 0.676631, 0.506589 },
                { 0.153894, 0.680203, 0.504172 },
                { 0.157851, 0.683765, 0.501686 },
                { 0.162016, 0.687316, 0.499129 },
                { 0.166383, 0.690856, 0.496502 },
                { 0.170948, 0.694384, 0.493803 },
                { 0.175707, 0.697900, 0.491033 },
                { 0.180653, 0.701402, 0.488189 },
                { 0.185783, 0.704891, 0.485273 },
                { 0.191090, 0.708366, 0.482284 },
                { 0.196571, 0.711827, 0.479221 },
                { 0.202219, 0.715272, 0.476084 },
                { 0.208030, 0.718701, 0.472873 },
                { 0.214000, 0.722114, 0.469588 },
                { 0.220124, 0.725509, 0.466226 },
                { 0.226397, 0.728888, 0.462789 },
                { 0.232815, 0.732247, 0.459277 },
                { 0.239374, 0.735588, 0.455688 },
                { 0.246070, 0.738910, 0.452024 },
                { 0.252899, 0.742211, 0.448284 },
                { 0.259857, 0.745492, 0.444467 },
                { 0.266941, 0.748751, 0.440573 },
                { 0.274149, 0.751988, 0.436601 },
                { 0.281477, 0.755203, 0.432552 },
                { 0.288921, 0.758394, 0.428426 },
                { 0.296479, 0.761561, 0.424223 },
                { 0.304148, 0.764704, 0.419943 },
                { 0.311925, 0.767822, 0.415586 },
                { 0.319809, 0.770914, 0.411152 },
                { 0.327796, 0.773980, 0.406640 },
                { 0.335885, 0.777018, 0.402049 },
                { 0.344074, 0.780029, 0.397381 },
                { 0.352360, 0.783011, 0.392636 },
                { 0.360741, 0.785964, 0.387814 },
                { 0.369214, 0.788888, 0.382914 },
                { 0.377779, 0.791781, 0.377939 },
                { 0.386433, 0.794644, 0.372886 },
                { 0.395174, 0.797475, 0.367757 },
                { 0.404001, 0.800275, 0.362552 },
                { 0.412913, 0.803041, 0.357269 },
                { 0.421908, 0.805774, 0.351910 },
                { 0.430983, 0.808473, 0.346476 },
                { 0.440137, 0.811138, 0.340967 },
                { 0.449368, 0.813768, 0.335384 },
                { 0.458674, 0.816363, 0.329727 },
                { 0.468053, 0.818921, 0.323998 },
                { 0.477504, 0.821444, 0.318195 },
                { 0.487026, 0.823929, 0.312321 },
                { 0.496615, 0.826376, 0.306377 },
                { 0.506271, 0.828786, 0.300362 },
                { 0.515992, 0.831158, 0.294279 },
                { 0.525776, 0.833491, 0.288127 },
                { 0.535621, 0.835785, 0.281908 },
                { 0.545524, 0.838039, 0.275626 },
                { 0.555484, 0.840254, 0.269281 },
                { 0.565498, 0.842430, 0.262877 },
                { 0.575563, 0.844566, 0.256415 },
                { 0.585678, 0.846661, 0.249897 },
                { 0.595839, 0.848717, 0.243329 },
                { 0.606045, 0.850733, 0.236712 },
                { 0.616293, 0.852709, 0.230052 },
                { 0.626579, 0.854645, 0.223353 },
                { 0.636902, 0.856542, 0.216620 },
                { 0.647257, 0.858400, 0.209861 },
                { 0.657642, 0.860219, 0.203082 },
                { 0.668054, 0.861999, 0.196293 },
                { 0.678489, 0.863742, 0.189503 },
                { 0.688944, 0.865448, 0.182725 },
                { 0.699415, 0.867117, 0.175971 },
                { 0.709898, 0.868751, 0.169257 },
                { 0.720391, 0.870350, 0.162603 },
                { 0.730889, 0.871916, 0.156029 },
                { 0.741388, 0.873449, 0.149561 },
                { 0.751884, 0.874951, 0.143228 },
                { 0.762373, 0.876424, 0.137064 },
                { 0.772852, 0.877868, 0.131109 },
                { 0.783315, 0.879285, 0.125405 },
                { 0.793760, 0.880678, 0.120005 },
                { 0.804182, 0.882046, 0.114965 },
                { 0.814576, 0.883393, 0.110347 },
                { 0.824940, 0.884720, 0.106217 },
                { 0.835270, 0.886029, 0.102646 },
                { 0.845561, 0.887322, 0.099702 },
                { 0.855810, 0.888601, 0.097452 },
                { 0.866013, 0.889868, 0.095953 },
                { 0.876168, 0.891125, 0.095250 },
                { 0.886271, 0.892374, 0.095374 },
                { 0.896320, 0.893616, 0.096335 },
                { 0.906311, 0.894855, 0.098125 },
                { 0.916242, 0.896091, 0.100717 },
                { 0.926106, 0.897330, 0.104071 },
                { 0.935904, 0.898570, 0.108131 },
                { 0.945636, 0.899815, 0.112838 },
                { 0.955300, 0.901065, 0.118128 },
                { 0.964894, 0.902323, 0.123941 },
                { 0.974417, 0.903590, 0.130215 },
                { 0.983868, 0.904867, 0.136897 },
                { 0.993248, 0.906157, 0.143936 }
            };

            return internal::CalcLerp(x, data);
        }

        inline Colour GetJetColour(double x)
        {
            constexpr Colour data[]
            {
                { 0.0, 0.0, 0.5 },
                { 0.0, 0.0, 1.0 },
                { 0.0, 0.5, 1.0 },
                { 0.0, 1.0, 1.0 },
                { 0.5, 1.0, 0.5 },
                { 1.0, 1.0, 0.0 },
                { 1.0, 0.5, 0.0 },
                { 1.0, 0.0, 0.0 },
                { 0.5, 0.0, 0.0 }
            };

            return internal::CalcLerp(x, data);
        }

        inline Colour GetCoolwarmColour(double x)
        {
            constexpr Colour data[]
            {
                {0.2298057 , 0.29871797, 0.75368315},
                {0.24158047, 0.31629433, 0.76912836},
                {0.25335523, 0.33387069, 0.78457357},
                {0.26513   , 0.35144705, 0.80001877},
                {0.27725828, 0.36874911, 0.81420682},
                {0.28942314, 0.3860228 , 0.82826481},
                {0.301588  , 0.40329648, 0.8423228 },
                {0.31409441, 0.42025025, 0.85513996},
                {0.32667965, 0.43713019, 0.86767078},
                {0.33926488, 0.45401013, 0.88020161},
                {0.35214593, 0.47052744, 0.89154635},
                {0.36514273, 0.48690285, 0.90242697},
                {0.37813954, 0.50327826, 0.91330759},
                {0.39136814, 0.51926329, 0.92309121},
                {0.40473582, 0.5350141 , 0.93221663},
                {0.41810351, 0.5507649 , 0.94134205},
                {0.43163281, 0.56611825, 0.94948929},
                {0.44530472, 0.58112091, 0.95677343},
                {0.45897663, 0.59612357, 0.96405758},
                {0.47274338, 0.61074494, 0.97050708},
                {0.48663207, 0.62487608, 0.97588348},
                {0.50052075, 0.63900721, 0.98125988},
                {0.51444831, 0.65279728, 0.98596453},
                {0.52845007, 0.66593621, 0.98938674},
                {0.54245183, 0.67907514, 0.99280895},
                {0.55645287, 0.69193699, 0.99573606},
                {0.57045174, 0.70396762, 0.99717787},
                {0.58445061, 0.71599826, 0.99861968},
                {0.59842954, 0.72783854, 0.9997511 },
                {0.61230075, 0.73865094, 0.99920645},
                {0.62617195, 0.74946333, 0.9986618 },
                {0.64002702, 0.76019317, 0.99799385},
                {0.65363997, 0.76968482, 0.99547653},
                {0.66725292, 0.77917646, 0.99295921},
                {0.68086588, 0.7886681 , 0.99044189},
                {0.69409898, 0.79678925, 0.98604561},
                {0.70731983, 0.80486618, 0.98158872},
                {0.72054069, 0.81294312, 0.97713182},
                {0.73330043, 0.81970833, 0.97102295},
                {0.7459943 , 0.82628616, 0.96467808},
                {0.75868817, 0.83286398, 0.95833321},
                {0.77086563, 0.83821279, 0.95056733},
                {0.7828985 , 0.84321748, 0.94240358},
                {0.79493136, 0.84822218, 0.93423982},
                {0.8064194 , 0.85210211, 0.92488425},
                {0.81765977, 0.85547078, 0.91498693},
                {0.82890015, 0.85883946, 0.90508962},
                {0.83959427, 0.86120639, 0.89422245},
                {0.84991464, 0.86288792, 0.8826917 },
                {0.86023501, 0.86456945, 0.87116094},
                {0.87063026, 0.86274788, 0.85820122},
                {0.8811004 , 0.85742322, 0.84381252},
                {0.89157054, 0.85209856, 0.82942383},
                {0.90124602, 0.84610696, 0.81479128},
                {0.90976009, 0.83914061, 0.79980233},
                {0.91827417, 0.83217425, 0.78481338},
                {0.92618223, 0.82471241, 0.76968298},
                {0.93275708, 0.81616051, 0.75424142},
                {0.93933192, 0.80760861, 0.73879986},
                {0.9454856 , 0.79872423, 0.72329072},
                {0.95013511, 0.78865241, 0.70754019},
                {0.95478462, 0.77858059, 0.69178966},
                {0.95919537, 0.76832796, 0.6760178 },
                {0.96193479, 0.75680959, 0.66009661},
                {0.96467422, 0.74529123, 0.64417542},
                {0.96735456, 0.73373012, 0.62825301},
                {0.9682034 , 0.7208441 , 0.61229299},
                {0.96905224, 0.70795808, 0.59633297},
                {0.96990108, 0.69507206, 0.58037295},
                {0.96900172, 0.68098016, 0.56449312},
                {0.96798582, 0.66680787, 0.54861863},
                {0.96696991, 0.65263558, 0.53274415},
                {0.96440896, 0.63744514, 0.5170398 },
                {0.9615619 , 0.62206616, 0.50136696},
                {0.95871483, 0.60668718, 0.48569412},
                {0.95452617, 0.59045662, 0.47025295},
                {0.94989031, 0.57394221, 0.454889  },
                {0.94525444, 0.5574278 , 0.43952504},
                {0.93947869, 0.54020258, 0.4244281 },
                {0.93310586, 0.52260503, 0.40947102},
                {0.92673303, 0.50500749, 0.39451395},
                {0.91941787, 0.48680872, 0.37983557},
                {0.91136979, 0.46814235, 0.36537395},
                {0.90332171, 0.44947598, 0.35091233},
                {0.89452203, 0.43027971, 0.33672014},
                {0.88487053, 0.41048291, 0.3228333 },
                {0.87521904, 0.3906861 , 0.30894646},
                {0.86499699, 0.37038113, 0.29530161},
                {0.85382405, 0.34922925, 0.28206008},
                {0.8426511 , 0.32807736, 0.26881855},
                {0.83107611, 0.3063662 , 0.25577615},
                {0.81847367, 0.28322579, 0.24324263},
                {0.80587123, 0.26008538, 0.23070911},
                {0.79301982, 0.23619059, 0.21831893},
                {0.77908953, 0.20902689, 0.20654988},
                {0.76515925, 0.18186318, 0.19478083},
                {0.75111488, 0.15295243, 0.18308839},
                {0.73596764, 0.10715368, 0.17213653},
                {0.7208204 , 0.06135492, 0.16118467},
                {0.70567316, 0.01555616, 0.15023281}
            };

            return internal::CalcLerp(x, data);
        }
    }
}